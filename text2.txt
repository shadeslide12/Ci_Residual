void ResidualPlotter::updateResidualPlot(const int& iteration, const double& convergence1,
                                         const double& convergence2) {
    // 添加新的数据点
    series_con1->append(iteration, convergence1);
    series_con2->append(iteration, convergence2);

    // 更新范围
    maxIteration = std::max(maxIteration, iteration);
    
    // 对于第一个数据点，初始化最大最小值
    if (series_con1->count() == 1) {
        maxCon1 = minCon1 = convergence1;
        maxCon2 = minCon2 = convergence2;
    } else {
        maxCon1 = std::max(maxCon1, convergence1);
        maxCon2 = std::max(maxCon2, convergence2);
        minCon1 = std::min(minCon1, convergence1);
        minCon2 = std::min(minCon2, convergence2);
    }

    // 计算合适的范围
    double range1 = maxCon1 - minCon1;
    double range2 = maxCon2 - minCon2;
    
    // 添加边距（上下各20%的边距）
    double margin1 = range1 * 0.2;
    double margin2 = range2 * 0.2;
    
    // 设置坐标轴范围
    axisX->setRange(0, maxIteration + 5);
    axisY1->setRange(minCon1 - margin1, maxCon1 + margin1);
    axisY2->setRange(minCon2 - margin2, maxCon2 + margin2);

    // 设置坐标轴格式
    axisY1->setLabelFormat("%.1f");
    axisY2->setLabelFormat("%.1f");
    
    // 设置网格线可见
    axisX->setGridLineVisible(true);
    axisY1->setGridLineVisible(true);
    axisY2->setGridLineVisible(true);

    this->update();
}